var searchIndex = JSON.parse('{\
"soa_derive_example":{"doc":"This crate is an example for the <code>soa_derive</code> crate …","i":[[3,"Particle","soa_derive_example","A basic Particle type",null,null],[12,"mass","","Mass of the particle",0,null],[12,"position","","Position of the particle",0,null],[12,"kind","","Kind of the particle",0,null],[12,"name","","Name of the particle",0,null],[3,"ParticleVec","","An analog to <code>Vec<Particle>\\n</code> with Struct of Array (SoA) …",null,null],[12,"mass","","A vector of <code>mass</code> from a <code>Particle</code>",1,null],[12,"position","","A vector of <code>position</code> from a <code>Particle</code>",1,null],[12,"kind","","A vector of <code>kind</code> from a <code>Particle</code>",1,null],[12,"name","","A vector of <code>name</code> from a <code>Particle</code>",1,null],[11,"new","","Similar to <code> Vec<Particle> ::new()</code>",1,[[],["particlevec",3]]],[11,"with_capacity","","Similar to <code> Vec<Particle> ::with_capacity()</code>, initializing …",1,[[["usize",15]],["particlevec",3]]],[11,"capacity","","Similar to <code> Vec<Particle> ::capacity()</code>, the capacity of …",1,[[],["usize",15]]],[11,"reserve","","Similar to <code> Vec<Particle> ::reserve()</code>, reserving the same …",1,[[["usize",15]]]],[11,"reserve_exact","","Similar to <code> Vec<Particle> ::reserve_exact()</code> reserving the …",1,[[["usize",15]]]],[11,"shrink_to_fit","","Similar to <code> Vec<Particle> ::shrink_to_fit()</code> shrinking all …",1,[[]]],[11,"truncate","","Similar to <code> Vec<Particle> ::truncate()</code> truncating all …",1,[[["usize",15]]]],[11,"push","","Similar to <code> Vec<Particle> ::push()</code>.",1,[[["particle",3]]]],[11,"len","","Similar to <code> Vec<Particle> ::len()</code>, all the fields should …",1,[[],["usize",15]]],[11,"is_empty","","Similar to <code> Vec<Particle> ::is_empty()</code>, all the fields …",1,[[],["bool",15]]],[11,"swap_remove","","Similar to <code> Vec<Particle> ::swap_remove()</code>.",1,[[["usize",15]],["particle",3]]],[11,"insert","","Similar to <code> Vec<Particle> ::insert()</code>.",1,[[["usize",15],["particle",3]]]],[11,"remove","","Similar to <code> Vec<Particle> ::remove()</code>.",1,[[["usize",15]],["particle",3]]],[11,"pop","","Similar to <code> Vec<Particle> ::pop()</code>.",1,[[],[["option",4],["particle",3]]]],[11,"append","","Similar to <code> Vec<Particle> ::append()</code>.",1,[[["particlevec",3]]]],[11,"clear","","Similar to <code> Vec<Particle> ::clear()</code>.",1,[[]]],[11,"split_off","","Similar to <code> Vec<Particle> ::split_off()</code>.",1,[[["usize",15]],["particlevec",3]]],[11,"as_slice","","Similar to <code> Vec<Particle> ::as_slice()</code>.",1,[[],["particleslice",3]]],[11,"as_mut_slice","","Similar to <code> Vec<Particle> ::as_mut_slice()</code>.",1,[[],["particleslicemut",3]]],[11,"slice","","Create a slice of this vector matching the given <code>range</code>. …",1,[[["usize",15],["range",3]],["particleslice",3]]],[11,"slice_mut","","Create a mutable slice of this vector matching the given …",1,[[["usize",15],["range",3]],["particleslicemut",3]]],[11,"retain","","Similar to <code> Vec<Particle> ::retain()</code>.",1,[[]]],[11,"get","","Similar to <code> Vec<Particle> ::get<I>()</code>.",1,[[],["option",4]]],[11,"get_unchecked","","Similar to <code> Vec<Particle> ::get_unchecked<I>()</code>.",1,[[]]],[11,"index","","Similar to <code> Vec<Particle> ::index<I>()</code>.",1,[[]]],[11,"get_mut","","Similar to <code> Vec<Particle> ::get_mut<I>()</code>.",1,[[],["option",4]]],[11,"get_unchecked_mut","","Similar to <code> Vec<Particle> ::get_unchecked_mut<I>()</code>.",1,[[]]],[11,"index_mut","","Similar to <code> Vec<Particle> ::index_mut<I>()</code>.",1,[[]]],[11,"as_ptr","","Similar to <code> Vec<Particle> ::as_ptr()</code>.",1,[[],["particleptr",3]]],[11,"as_mut_ptr","","Similar to <code> Vec<Particle> ::as_mut_ptr()</code>.",1,[[],["particleptrmut",3]]],[11,"from_raw_parts","","Similar to <code> Vec<Particle> ::from_raw_parts()</code>.",1,[[["usize",15],["particleptrmut",3]],["particlevec",3]]],[3,"ParticleRef","","A reference to a <code>Particle</code> with struct of array layout.",null,null],[12,"mass","","A reference to a <code>mass</code> from a <code>ParticleVec</code>",2,null],[12,"position","","A reference to a <code>position</code> from a <code>ParticleVec</code>",2,null],[12,"kind","","A reference to a <code>kind</code> from a <code>ParticleVec</code>",2,null],[12,"name","","A reference to a <code>name</code> from a <code>ParticleVec</code>",2,null],[3,"ParticleRefMut","","A mutable reference to a <code>Particle</code> with struct of array …",null,null],[12,"mass","","A mutable reference to a <code>mass</code> from a <code>ParticleVec</code>",3,null],[12,"position","","A mutable reference to a <code>position</code> from a <code>ParticleVec</code>",3,null],[12,"kind","","A mutable reference to a <code>kind</code> from a <code>ParticleVec</code>",3,null],[12,"name","","A mutable reference to a <code>name</code> from a <code>ParticleVec</code>",3,null],[11,"as_ref","","Create a <code>ParticleRef</code> from a borrowed <code>Particle</code> .",0,[[],["particleref",3]]],[11,"as_mut","","Create a <code>ParticleRefMut</code> from a mutably borrowed <code>Particle</code> .",0,[[],["particlerefmut",3]]],[3,"ParticlePtr","","An analog of a pointer to <code>Particle</code> with struct of array …",null,null],[12,"mass","","A pointer to a <code>mass</code> from a <code>ParticleVec</code>",4,null],[12,"position","","A pointer to a <code>position</code> from a <code>ParticleVec</code>",4,null],[12,"kind","","A pointer to a <code>kind</code> from a <code>ParticleVec</code>",4,null],[12,"name","","A pointer to a <code>name</code> from a <code>ParticleVec</code>",4,null],[3,"ParticlePtrMut","","An analog of a mutable pointer to <code>Particle</code> with struct of …",null,null],[12,"mass","","A mutable pointer to a <code>mass</code> from a <code>ParticleVec</code>",5,null],[12,"position","","A mutable pointer to a <code>position</code> from a <code>ParticleVec</code>",5,null],[12,"kind","","A mutable pointer to a <code>kind</code> from a <code>ParticleVec</code>",5,null],[12,"name","","A mutable pointer to a <code>name</code> from a <code>ParticleVec</code>",5,null],[11,"as_mut_ptr","","Convert a <code>ParticlePtr</code> to a <code>ParticlePtrMut</code> ; <em>i.e.</em> do a …",4,[[],["particleptrmut",3]]],[11,"is_null","","Similar to <code>*const T::is_null()</code>.",4,[[],["bool",15]]],[11,"as_ref","","Similar to <code>*const T::as_ref()</code>, with the same safety …",4,[[],[["particleref",3],["option",4]]]],[11,"offset","","Similar to <code>*const T::offset()</code>, with the same safety …",4,[[["isize",15]],["particleptr",3]]],[11,"wrapping_offset","","Similar to <code>*const T::offset()</code>.",4,[[["isize",15]],["particleptr",3]]],[11,"add","","Similar to <code>*const T::add()</code>, with the same safety caveats.",4,[[["usize",15]],["particleptr",3]]],[11,"sub","","Similar to <code>*const T::sub()</code>, with the same safety caveats.",4,[[["usize",15]],["particleptr",3]]],[11,"wrapping_add","","Similar to <code>*const T::wrapping_add()</code>.",4,[[["usize",15]],["particleptr",3]]],[11,"wrapping_sub","","Similar to <code>*const T::wrapping_sub()</code>.",4,[[["usize",15]],["particleptr",3]]],[11,"read","","Similar to <code>*const T::read()</code>, with the same safety caveats.",4,[[],["particle",3]]],[11,"read_volatile","","Similar to <code>*const T::read_volatile()</code>, with the same …",4,[[],["particle",3]]],[11,"read_unaligned","","Similar to <code>*const T::read_unaligned()</code>, with the same …",4,[[],["particle",3]]],[11,"as_ptr","","Convert a <code>ParticlePtrMut</code> to a <code>ParticlePtr</code> ; <em>i.e.</em> do a …",5,[[],["particleptr",3]]],[11,"is_null","","Similar to <code>*mut T::is_null()</code>.",5,[[],["bool",15]]],[11,"as_ref","","Similar to <code>*mut T::as_ref()</code>, with the same safety caveats.",5,[[],[["particleref",3],["option",4]]]],[11,"as_mut","","Similar to <code>*mut T::as_mut()</code>, with the same safety caveats.",5,[[],[["option",4],["particlerefmut",3]]]],[11,"offset","","Similar to <code>*mut T::offset()</code>, with the same safety caveats.",5,[[["isize",15]],["particleptrmut",3]]],[11,"wrapping_offset","","Similar to <code>*mut T::wrapping_offset()</code>",5,[[["isize",15]],["particleptrmut",3]]],[11,"add","","Similar to <code>*mut T::add()</code>, with the same safety caveats.",5,[[["usize",15]],["particleptrmut",3]]],[11,"sub","","Similar to <code>*mut T::sub()</code>, with the same safety caveats.",5,[[["usize",15]],["particleptrmut",3]]],[11,"wrapping_add","","Similar to <code>*mut T::wrapping_add()</code>, with the same safety …",5,[[["usize",15]],["particleptrmut",3]]],[11,"wrapping_sub","","Similar to <code>*mut T::wrapping_sub()</code>, with the same safety …",5,[[["usize",15]],["particleptrmut",3]]],[11,"read","","Similar to <code>*mut T::read()</code>, with the same safety caveats.",5,[[],["particle",3]]],[11,"read_volatile","","Similar to <code>*mut T::read_volatile()</code>, with the same safety …",5,[[],["particle",3]]],[11,"read_unaligned","","Similar to <code>*mut T::read_unaligned()</code>, with the same safety …",5,[[],["particle",3]]],[11,"write","","Similar to <code>*mut T::write()</code>, with the same safety caveats.",5,[[["particle",3]]]],[11,"write_volatile","","Similar to <code>*mut T::write_volatile()</code>, with the same safety …",5,[[["particle",3]]]],[11,"write_unaligned","","Similar to <code>*mut T::write_unaligned()</code>, with the same …",5,[[["particle",3]]]],[11,"as_ptr","","Convert a <code>ParticleRef</code> to a <code>ParticlePtr</code> ; <em>i.e.</em> do a …",2,[[],["particleptr",3]]],[11,"as_ptr","","Convert a <code>ParticleRefMut</code> to a <code>ParticlePtr</code> ; <em>i.e.</em> do a …",3,[[],["particleptr",3]]],[11,"as_mut_ptr","","Convert a <code>ParticleRefMut</code> to a <code>ParticlePtrMut</code> ; <em>i.e.</em> do a …",3,[[],["particleptrmut",3]]],[3,"ParticleSlice","","A slice of <code>Particle</code> inside a <code>ParticleVec</code> .",null,null],[12,"mass","","A slice of <code>mass</code> from a <code>ParticleVec</code>",6,null],[12,"position","","A slice of <code>position</code> from a <code>ParticleVec</code>",6,null],[12,"kind","","A slice of <code>kind</code> from a <code>ParticleVec</code>",6,null],[12,"name","","A slice of <code>name</code> from a <code>ParticleVec</code>",6,null],[11,"len","","Similar to <code> [Particle] ::len()</code>, the length of all fields …",6,[[],["usize",15]]],[11,"is_empty","","Similar to <code> [Particle] ::is_empty()</code>, the length of all …",6,[[],["bool",15]]],[11,"first","","Similar to <code> [Particle] ::first()</code>.",6,[[],[["particleref",3],["option",4]]]],[11,"split_first","","Similar to <code> [Particle] ::split_first()</code>.",6,[[],["option",4]]],[11,"last","","Similar to <code> [Particle] ::last()</code>.",6,[[],[["particleref",3],["option",4]]]],[11,"split_last","","Similar to <code> [Particle] ::split_last()</code>.",6,[[],["option",4]]],[11,"split_at","","Similar to <code> [Particle] ::split_at()</code>.",6,[[["usize",15]]]],[11,"get","","Similar to <code> [Particle] ::get()</code>.",6,[[],["option",4]]],[11,"get_unchecked","","Similar to <code> [Particle] ::get_unchecked()</code>.",6,[[]]],[11,"index","","Similar to <code>std::ops::Index</code> trait on [Particle] . This is …",6,[[]]],[11,"reborrow","","Reborrows the slices in a narrower lifetime",6,[[],["particleslice",3]]],[11,"as_ptr","","Similar to <code> [Particle] ::as_ptr()</code>.",6,[[],["particleptr",3]]],[11,"from_raw_parts","","Similar to <code>std::slice::from_raw_parts()</code>.",6,[[["usize",15],["particleptr",3]],["particleslice",3]]],[3,"ParticleSliceMut","","A mutable slice of <code>Particle</code> inside a <code>ParticleVec</code> .",null,null],[12,"mass","","A mutable slice of <code>mass</code> from a <code>ParticleVec</code>",7,null],[12,"position","","A mutable slice of <code>position</code> from a <code>ParticleVec</code>",7,null],[12,"kind","","A mutable slice of <code>kind</code> from a <code>ParticleVec</code>",7,null],[12,"name","","A mutable slice of <code>name</code> from a <code>ParticleVec</code>",7,null],[11,"as_ref","","Convert a <code>ParticleSliceMut</code> to a <code>ParticleSlice</code> in order to …",7,[[],["particleslice",3]]],[11,"len","","Similar to <code> [Particle] ::len()</code>, the length of all fields …",7,[[],["usize",15]]],[11,"is_empty","","Similar to <code> [Particle] ::is_empty()</code>, the length of all …",7,[[],["bool",15]]],[11,"first_mut","","Similar to <code> [Particle] ::first_mut()</code>.",7,[[],[["option",4],["particlerefmut",3]]]],[11,"split_first_mut","","Similar to <code> [Particle] ::split_first_mut()</code>.",7,[[],["option",4]]],[11,"last_mut","","Similar to <code> [Particle] ::last_mut()</code>.",7,[[],[["option",4],["particlerefmut",3]]]],[11,"split_last_mut","","Similar to <code> [Particle] ::last_mut()</code>.",7,[[],["option",4]]],[11,"split_at_mut","","Similar to <code> [Particle] ::split_at_mut()</code>.",7,[[["usize",15]]]],[11,"swap","","Similar to <code> [Particle] ::swap()</code>.",7,[[["usize",15]]]],[11,"get","","Similar to <code> [Particle] ::get()</code>.",7,[[],["option",4]]],[11,"get_unchecked","","Similar to <code> [Particle] ::get_unchecked()</code>.",7,[[]]],[11,"index","","Similar to <code>std::ops::Index</code> trait on [Particle] . This is …",7,[[]]],[11,"get_mut","","Similar to <code> [Particle] ::get_mut()</code>.",7,[[],["option",4]]],[11,"get_unchecked_mut","","Similar to <code> [Particle] ::get_unchecked_mut()</code>.",7,[[]]],[11,"index_mut","","Similar to <code>std::ops::IndexMut</code> trait on [Particle] . This …",7,[[]]],[11,"as_slice","","Returns a non-mutable slice from this mutable slice.",7,[[],["particleslice",3]]],[11,"reborrow","","Reborrows the slices in a narrower lifetime",7,[[],["particleslicemut",3]]],[11,"as_ptr","","Similar to <code> [Particle] ::as_ptr()</code>.",7,[[],["particleptr",3]]],[11,"as_mut_ptr","","Similar to <code> [Particle] ::as_mut_ptr()</code>.",7,[[],["particleptrmut",3]]],[11,"from_raw_parts_mut","","Similar to <code>std::slice::from_raw_parts_mut()</code>.",7,[[["usize",15],["particleptrmut",3]],["particleslicemut",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_iter","","",6,[[]]],[11,"into_iter","","",7,[[]]],[11,"clone","","",2,[[],["particleref",3]]],[11,"clone","","",4,[[],["particleptr",3]]],[11,"clone","","",5,[[],["particleptrmut",3]]],[11,"clone","","",6,[[],["particleslice",3]]],[11,"eq","","",0,[[["particle",3]],["bool",15]]],[11,"ne","","",0,[[["particle",3]],["bool",15]]],[11,"eq","","",1,[[["particlevec",3]],["bool",15]]],[11,"ne","","",1,[[["particlevec",3]],["bool",15]]],[11,"eq","","",2,[[["particleref",3]],["bool",15]]],[11,"ne","","",2,[[["particleref",3]],["bool",15]]],[11,"eq","","",3,[[["particlerefmut",3]],["bool",15]]],[11,"ne","","",3,[[["particlerefmut",3]],["bool",15]]],[11,"eq","","",4,[[["particleptr",3]],["bool",15]]],[11,"ne","","",4,[[["particleptr",3]],["bool",15]]],[11,"eq","","",5,[[["particleptrmut",3]],["bool",15]]],[11,"ne","","",5,[[["particleptrmut",3]],["bool",15]]],[11,"eq","","",6,[[["particleslice",3]],["bool",15]]],[11,"ne","","",6,[[["particleslice",3]],["bool",15]]],[11,"eq","","",7,[[["particleslicemut",3]],["bool",15]]],[11,"ne","","",7,[[["particleslicemut",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"from_iter","","",1,[[["intoiterator",8]]]],[11,"iter","","Get an iterator over the <code>ParticleRef</code> in this vector",1,[[],["iter",3]]],[11,"iter","","Get an iterator over the <code>ParticleRef</code> in this slice.",6,[[],["iter",3]]],[11,"iter_mut","","Get a mutable iterator over the <code>ParticleRefMut</code> in this …",1,[[],["itermut",3]]],[11,"iter","","Get an iterator over the <code>ParticleRef</code> in this vector",7,[[],["iter",3]]],[11,"iter_mut","","Get a mutable iterator over the <code>ParticleRefMut</code> in this …",7,[[],["itermut",3]]]],"p":[[3,"Particle"],[3,"ParticleVec"],[3,"ParticleRef"],[3,"ParticleRefMut"],[3,"ParticlePtr"],[3,"ParticlePtrMut"],[3,"ParticleSlice"],[3,"ParticleSliceMut"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);